/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import Systems.Systems;
import model.Community;
import model.Encounter;
import model.House;
import model.Person;
import model.VitalSigns;

/**
 *
 * @author Administrator
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    private Systems sys;

    public MainJFrame() {
        initComponents();
        sys = new Systems();
        populateCity();
        createFenwayData();
        createbackbayData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitPane = new javax.swing.JSplitPane();
        viewPane = new javax.swing.JPanel();
        createPane = new javax.swing.JPanel();
        btnCreate = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        cmbCity = new javax.swing.JComboBox<>();
        btnLogin = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout viewPaneLayout = new javax.swing.GroupLayout(viewPane);
        viewPane.setLayout(viewPaneLayout);
        viewPaneLayout.setHorizontalGroup(
            viewPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 625, Short.MAX_VALUE)
        );
        viewPaneLayout.setVerticalGroup(
            viewPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 581, Short.MAX_VALUE)
        );

        splitPane.setRightComponent(viewPane);

        btnCreate.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        btnCreate.setText("CRUD Person");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnView.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        btnView.setText("Get Vital Signs");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        cmbCity.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        cmbCity.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCityItemStateChanged(evt);
            }
        });
        cmbCity.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                cmbCityAncestorRemoved(evt);
            }
        });
        cmbCity.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                cmbCityComponentResized(evt);
            }
        });
        cmbCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCityActionPerformed(evt);
            }
        });

        btnLogin.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        btnLogin.setText("View Info");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout createPaneLayout = new javax.swing.GroupLayout(createPane);
        createPane.setLayout(createPaneLayout);
        createPaneLayout.setHorizontalGroup(
            createPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(createPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCreate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLogin))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createPaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cmbCity, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        createPaneLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCreate, btnLogin, btnView, cmbCity});

        createPaneLayout.setVerticalGroup(
            createPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createPaneLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(btnCreate)
                .addGap(18, 18, 18)
                .addComponent(btnView)
                .addGap(94, 94, 94)
                .addComponent(cmbCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLogin)
                .addContainerGap(315, Short.MAX_VALUE))
        );

        createPaneLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnCreate, btnView});

        splitPane.setLeftComponent(createPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        CrudJPanel crudPanel = new CrudJPanel(sys);
        splitPane.setRightComponent(crudPanel);
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        EnconterJPanel enconterPanel = new EnconterJPanel(sys);
        splitPane.setRightComponent(enconterPanel);

    }//GEN-LAST:event_btnViewActionPerformed

    private void cmbCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCityActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_cmbCityActionPerformed

    private void cmbCityAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_cmbCityAncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbCityAncestorRemoved

    private void cmbCityComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_cmbCityComponentResized
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbCityComponentResized

    private void cmbCityItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCityItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbCityItemStateChanged

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        CommunityPanel communityPanel = new CommunityPanel(sys);
        NYCPanel NYCPanel = new NYCPanel(sys);

        String name = (String) cmbCity.getSelectedItem();
        if (name.equals("Boston")) {
            splitPane.setRightComponent(communityPanel);
        }
        if (name.equals("NYC")) {
            splitPane.setRightComponent(NYCPanel);
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox<String> cmbCity;
    private javax.swing.JPanel createPane;
    private javax.swing.JSplitPane splitPane;
    private javax.swing.JPanel viewPane;
    // End of variables declaration//GEN-END:variables

    private void populateCity() {
        cmbCity.addItem("Boston");
        cmbCity.addItem("NYC");

    }

    private void createFenwayData() {
        Person p1 = new Person("Siyuan He", 22, new House("Landmark"), new Community("Fenway"));
        p1.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(120, 80)));
        p1.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(121, 81)));
        p1.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(152, 82)));
        sys.getPersonDirectory().createPerson(p1);
        Person p2 = new Person("Mandy", 27, new House("Queensberry"), new Community("Fenway"));
        p2.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(130, 90)));
        p2.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(131, 91)));
        p2.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(132, 116)));
        sys.getPersonDirectory().createPerson(p2);
        Person p3 = new Person("JiaJia", 23, new House("Peterborough"), new Community("Fenway"));
        p3.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(110, 70)));
        p3.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(111, 71)));
        p3.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(92, 75)));
       sys.getPersonDirectory().createPerson(p3);
        Person p4 = new Person("Bill", 5, new House("Landmark"), new Community("Fenway"));
        p4.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(120, 80)));
        p4.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(121, 81)));
        p4.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(127, 87)));
        sys.getPersonDirectory().createPerson(p4);
        Person p5 = new Person("Ho", 66, new House("Peterborough"), new Community("Fenway"));
        p5.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(130, 90)));
        p5.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(131, 91)));
        p5.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(132, 92)));
        sys.getPersonDirectory().createPerson(p5);
        Person p6 = new Person("Jack", 11, new House("Peterborough"), new Community("Fenway"));
        p6.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(110, 70)));
        p6.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(111, 71)));
        p6.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(111, 55)));
       sys.getPersonDirectory().createPerson(p6);
        Person p7 = new Person("Mike", 35, new House("Landmark"), new Community("Fenway"));
        p7.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(120, 80)));
        p7.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(121, 81)));
        p7.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(120, 80)));
        sys.getPersonDirectory().createPerson(p7);
        Person p8 = new Person("Peter",67, new House("Peterborough"), new Community("Fenway"));
        p8.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(130, 90)));
        p8.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(131, 91)));
        p8.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(102, 97)));
        sys.getPersonDirectory().createPerson(p8);
        Person p9 = new Person("Tony", 47, new House("Landmark"), new Community("Fenway"));
        p9.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(110, 70)));
        p9.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(111, 71)));
        p9.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(111, 71)));
       sys.getPersonDirectory().createPerson(p9);
        Person p10 = new Person("Thaos", 55, new House("Peterborough"), new Community("Fenway"));
        p10.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(110, 70)));
        p10.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(111, 71)));
        p10.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(140, 72)));
       sys.getPersonDirectory().createPerson(p10);
    }
    
    private void createbackbayData() {
        Person p1 = new Person("Andy", 11, new House("Landmark"), new Community("Back Bay"));
        p1.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(120, 80)));
        p1.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(121, 81)));
        p1.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(111, 71)));
        sys.getPersonDirectory().createPerson(p1);
        Person p2 = new Person("Wang", 27, new House("Queensberry"), new Community("Back Bay"));
        p2.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(130, 90)));
        p2.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(131, 91)));
        p2.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(177, 116)));
        sys.getPersonDirectory().createPerson(p2);
        Person p3 = new Person("Leo", 46, new House("Peterborough"), new Community("Back Bay"));
        p3.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(110, 70)));
        p3.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(111, 71)));
        p3.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(92, 33)));
       sys.getPersonDirectory().createPerson(p3);
        Person p4 = new Person("Messi", 85, new House("Landmark"), new Community("Back Bay"));
        p4.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(120, 80)));
        p4.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(121, 81)));
        p4.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(100, 87)));
        sys.getPersonDirectory().createPerson(p4);
        Person p5 = new Person("Hart", 12, new House("Peterborough"), new Community("Back Bay"));
        p5.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(130, 90)));
        p5.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(131, 91)));
        p5.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(132, 55)));
        sys.getPersonDirectory().createPerson(p5);
        Person p6 = new Person("James", 38, new House("Peterborough"), new Community("Back Bay"));
        p6.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(110, 70)));
        p6.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(111, 71)));
        p6.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(111, 75)));
       sys.getPersonDirectory().createPerson(p6);
        Person p7 = new Person("Kobe", 44, new House("Landmark"), new Community("Back Bay"));
        p7.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(120, 80)));
        p7.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(121, 81)));
        p7.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(150, 80)));
        sys.getPersonDirectory().createPerson(p7);
        Person p8 = new Person("Guy",59, new House("Peterborough"), new Community("Back Bay"));
        p8.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(130, 90)));
        p8.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(131, 91)));
        p8.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(102, 97)));
        sys.getPersonDirectory().createPerson(p8);
        Person p9 = new Person("Bale", 18, new House("Landmark"), new Community("Back Bay"));
        p9.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(110, 70)));
        p9.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(111, 71)));
        p9.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(155, 71)));
       sys.getPersonDirectory().createPerson(p9);
        Person p10 = new Person("Ronaldo", 26, new House("Peterborough"), new Community("Back Bay"));
        p10.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(110, 70)));
        p10.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(111, 71)));
        p10.getEncounterHistory().addEncounter(new Encounter(new VitalSigns(165, 72)));
       sys.getPersonDirectory().createPerson(p10);
    }
}
